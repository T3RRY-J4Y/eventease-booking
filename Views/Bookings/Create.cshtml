@model EventEase.Web.Models.Booking

@{
    ViewData["Title"] = "Add Booking";
}

<h1 class="text-center">Add Booking</h1>
<hr />

<div class="row justify-content-center">
    <div class="col-md-6">
        <form asp-action="Create" method="post" class="p-4 bg-light border rounded shadow-sm">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-danger mb-3"></div>

            <div class="mb-3">
                <label asp-for="EventId" class="form-label"></label>
                <select asp-for="EventId" class="form-select" asp-items="ViewBag.EventId" id="eventSelect"></select>
                <span asp-validation-for="EventId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="VenueId" class="form-label"></label>
                <select asp-for="VenueId" class="form-select" asp-items="ViewBag.VenueId"></select>
                <span asp-validation-for="VenueId" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="BookingDate" class="form-label"></label>
                <input type="text" class="form-control" id="bookingDateDisplay" readonly />
            </div>

            <div class="mb-3">
                <label>Start Time</label>
                <input type="text" class="form-control" id="startTimeDisplay" readonly />
            </div>

            <div class="mb-3">
                <label>End Time</label>
                <input type="text" class="form-control" id="endTimeDisplay" readonly />
            </div>

            <div class="form-group text-center mt-3">
                <input type="submit" value="Create Booking" class="btn btn-primary px-4" />
            </div>
        </form>
    </div>
</div>

<div class="text-center mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        function updateBookingInfo(eventId) {
            var bookingDateDisplay = document.getElementById('bookingDateDisplay');
            var startTimeDisplay = document.getElementById('startTimeDisplay');
            var endTimeDisplay = document.getElementById('endTimeDisplay');

            if (eventId) {
                fetch('/Events/GetEventDate/' + eventId)
                    .then(res => res.json())
                    .then(data => {
                        let date = new Date(data.date);
                        let start = new Date(data.startTime);
                        let end = new Date(data.endTime);

                        bookingDateDisplay.value = date.toISOString().split('T')[0];
                        startTimeDisplay.value = start.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                        endTimeDisplay.value = end.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
                    })
                    .catch(() => {
                        bookingDateDisplay.value = '';
                        startTimeDisplay.value = '';
                        endTimeDisplay.value = '';
                    });
            } else {
                bookingDateDisplay.value = '';
                startTimeDisplay.value = '';
                endTimeDisplay.value = '';
            }
        }

        document.getElementById('eventSelect').addEventListener('change', function () {
            updateBookingInfo(this.value);
        });

        document.addEventListener('DOMContentLoaded', function () {
            var initialEventId = document.getElementById('eventSelect').value;
            if (initialEventId) updateBookingInfo(initialEventId);
        });
    </script>
}
